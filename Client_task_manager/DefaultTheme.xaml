<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Client_task_manager">

    <local:GetBorderStyleConverter x:Key="getBorderStyleConverter" />

    <Style TargetType="Window" x:Key="WindowTheme">
        <Style.Setters>
            <Setter Property="Background" Value="White"/>
        </Style.Setters>
    </Style>

    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ContextMenu}">
        <Setter Property="SnapsToDevicePixels"
          Value="True" />
        <Setter Property="OverridesDefaultStyle"
          Value="True" />
        <Setter Property="Grid.IsSharedSizeScope"
          Value="true" />
        <Setter Property="HasDropShadow"
          Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border x:Name="Border" Background="White" BorderThickness="1" BorderBrush="{TemplateBinding BorderBrush}">
                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" Value="true">
                            <Setter TargetName="Border" Property="Padding" Value="0,3,0,3" />
                            <Setter TargetName="Border" Property="CornerRadius" Value="10" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="Button.Static.Background" Color="White"/>
    <SolidColorBrush x:Key="Button.Static.Border" Color="#abadb3"/>
    <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#f5fbff"/>
    <SolidColorBrush x:Key="Button.MouseOver.Border" Color="Red"/>
    <SolidColorBrush x:Key="Button.Pressed.Background" Color="#e3f4ff"/>
    <SolidColorBrush x:Key="Button.Pressed.Border" Color="OrangeRed"/>
    <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
    <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
    <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
    <Style TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Opacity" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="10" BorderThickness="1.5" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            <Setter Property="Opacity" Value="0.70"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--<Style TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>

                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" CornerRadius="10" BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        <Border.Background>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#FF3C3C3C" Offset="1" />
                                <GradientStop Color="Gray" Offset="0" />
                                <GradientStop Color="White" Offset="0.633" />
                                <GradientStop Color="#FFF7F7F7" Offset="0.266" />
                            </LinearGradientBrush>
                        </Border.Background>

                        <Border.Triggers>
                            <EventTrigger RoutedEvent="MouseDown">
                                <EventTrigger.Actions>
                                    <BeginStoryboard>
                                        <Storyboard TargetName="border">
                                            <DoubleAnimation Storyboard.TargetProperty="Width" From="140" To="135" RepeatBehavior="1x" Duration="0:0:0.1" AccelerationRatio="0" AutoReverse="True"/>
                                            <DoubleAnimation Storyboard.TargetProperty="Height" From="35" To="32" RepeatBehavior="1x" Duration="0:0:0.1" AccelerationRatio="0" AutoReverse="True"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger.Actions>
                            </EventTrigger>
                        </Border.Triggers>
                    </Border>


                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0" Opacity="0.85">
                                        <GradientStop Color="#FF3C3C3C" Offset="1" />
                                        <GradientStop Color="Gray" Offset="0" />
                                        <GradientStop Color="White" Offset="0.633" />
                                        <GradientStop Color="#FFF7F7F7" Offset="0.266" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="BorderBrush" TargetName="border" Value="Red" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <SolidColorBrush x:Key="TextBox.Static.Border" Color="Black"/>
    <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="Red"/>
    <SolidColorBrush x:Key="TextBox.Focus.Border" Color="OrangeRed"/>
    <Style TargetType="TextBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border x:Name="border" CornerRadius="10" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                    <Condition Property="IsSelectionActive" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="TextAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style TargetType="Border" x:Key="BorderForTextBlockStyle">
        <Setter Property="CornerRadius" Value="10"/>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Margin" Value="10,0,10,0"/>
    </Style>

    <SolidColorBrush x:Key="ProgressBar.Background" Color="#FFE6E6E6"/>
    <SolidColorBrush x:Key="ProgressBar.Border" Color="Black"/>
    <Style TargetType="ProgressBar">
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ProgressBar.Border}"/>
        <Setter Property="BorderThickness" Value="0.4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ProgressBar">
                    <Grid x:Name="TemplateRoot">
                        <Border CornerRadius="5" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"/>
                        <Rectangle x:Name="PART_Track"/>
                        <Grid x:Name="PART_Indicator" ClipToBounds="true" HorizontalAlignment="Left">
                            <Border x:Name="Indicator" CornerRadius="5" Margin="1">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FF9CF9A1"/>
                                        <GradientStop Color="#FF9CF9A1" Offset="1"/>
                                        <GradientStop Color="#FF2DA234" Offset="0.502"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>
                        </Grid>
                        <TextBlock Text="{Binding ElementName=progressBar, Path=Value, StringFormat={}{0:0}%}" Foreground="#b0bccf" HorizontalAlignment="Right" FontSize="14" FontStyle="Italic" Margin="2,2,5,2"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter Property="LayoutTransform" TargetName="TemplateRoot">
                                <Setter.Value>
                                    <RotateTransform Angle="-90"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsIndeterminate" Value="true">
                            <Setter Property="Visibility" TargetName="Indicator" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="ListBox.Static.Background" Color="#ededed"/>
    <SolidColorBrush x:Key="ListBox.Static.Border" Color="#FFABADB3"/>
    <SolidColorBrush x:Key="ListBox.Disabled.Background" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="ListBox.Disabled.Border" Color="#FFD9D9D9"/>
    <Style TargetType="{x:Type ListBox}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{StaticResource ListBox.Static.Border}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="1" SnapsToDevicePixels="true">
                        <ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource ListBox.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ListBox.Disabled.Border}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="true"/>
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="highPriorityToolTip" TargetType="ToolTip">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToolTip">
                    <Border Background="#612222" BorderBrush="#d65c5c" BorderThickness="1" CornerRadius="10">
                        <TextBlock Text="High priority" Foreground="Red" Margin="5"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="lowPriorityToolTip" TargetType="ToolTip">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToolTip">
                    <Border Background="#8a5f0a" BorderBrush="#c9a151" BorderThickness="1" CornerRadius="10">
                        <TextBlock Text="Low priority" Foreground="Orange" Margin="5"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="normalPriorityToolTip" TargetType="ToolTip">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToolTip">
                    <Border Background="Green" BorderBrush="#4dbf3d" BorderThickness="1" CornerRadius="10">
                        <TextBlock Text="Not prioritized" Foreground="#1eff00" Margin="5"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="priorityNormalBorder" TargetType="Border">
        <Setter Property="Background" Value="#1eff00"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ToolTip Placement="Left"  Style="{StaticResource normalPriorityToolTip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="Green"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="BorderBrush" Value="#4dbf3d"/>
            </Trigger>
        </Style.Triggers>
    </Style>



    <Style x:Key="priorityHighBorder" TargetType="Border">
        <Setter Property="Background" Value="Red"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ToolTip Placement="Left"  Style="{StaticResource highPriorityToolTip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="#612222"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="BorderBrush" Value="#d65c5c"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="priorityLowBorder" TargetType="Border">
        <Setter Property="Background" Value="#ff9900"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ToolTip Placement="Left"  Style="{StaticResource lowPriorityToolTip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="#8a5f0a"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="BorderBrush" Value="#c9a151"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <SolidColorBrush x:Key="CurrentTasksToolTipBackground" Color="#1e3a57"/>
    <SolidColorBrush x:Key="CurrentTasksToolTipBorderBrush" Color="DarkGray"/>
    <SolidColorBrush x:Key="CurrentTasksToolTipForeground_1" Color="#b0bccf"/>
    <SolidColorBrush x:Key="CurrentTasksToolTipForeground_2" Color="LightGray"/>
    <Style x:Key="currentTasksToolTip" TargetType="ToolTip">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToolTip">
                    <Border Background="{StaticResource CurrentTasksToolTipBackground}" BorderBrush="{StaticResource CurrentTasksToolTipBorderBrush}" BorderThickness="1" CornerRadius="10">
                        <StackPanel Margin="5" Width="400" Orientation="Vertical">
                            <TextBlock  Text="Main task:" Foreground="{StaticResource CurrentTasksToolTipForeground_1}" TextWrapping="Wrap" TextAlignment="Left" FontSize="14" Margin="5,10,5,0"/>

                            <TextBlock  Text="{Binding Path=MainTaskTitle}" Foreground="{StaticResource CurrentTasksToolTipForeground_2}" TextWrapping="Wrap" TextAlignment="Left" FontSize="14" Margin="5"/>

                            <TextBlock  Text="Subtask:" Foreground="{StaticResource CurrentTasksToolTipForeground_1}" TextWrapping="Wrap" TextAlignment="Left" FontSize="14" Margin="5,10,5,0"/>

                            <TextBlock  Text="{Binding Path=SubTaskTitle}" Foreground="{StaticResource CurrentTasksToolTipForeground_2}" TextWrapping="Wrap" TextAlignment="Left" FontSize="14" Margin="5"/>

                            <TextBlock  Text="Priority:" Foreground="{StaticResource CurrentTasksToolTipForeground_1}" TextWrapping="Wrap" TextAlignment="Left" FontSize="14" Margin="5,10,5,0"/>

                            <TextBlock  Text="{Binding Path=Priority}" Foreground="{StaticResource CurrentTasksToolTipForeground_2}" TextWrapping="Wrap" TextAlignment="Left" FontSize="14" Margin="5"/>
                            
                            <TextBlock  Text="Percentage of users who completed the task:" Foreground="{StaticResource CurrentTasksToolTipForeground_1}" TextWrapping="Wrap" TextAlignment="Left" FontSize="14" Margin="5,10,5,5"/>

                            <ProgressBar  Name="progressBar" Value="{Binding Path=DeadlineValue}" Margin="5,0,5,0"/>

                            <TextBlock Text="Creation date:" Foreground="{StaticResource CurrentTasksToolTipForeground_1}" TextWrapping="Wrap" TextAlignment="Left" FontSize="14" Margin="5,15,5,0"/>

                            <TextBlock Text="{Binding Path=DateTimeCreation, StringFormat={}{0:dd.MM.yyyy  HH:mm}}" Foreground="{StaticResource CurrentTasksToolTipForeground_2}" TextWrapping="Wrap" TextAlignment="Left" FontSize="14" Margin="5"/>

                            <TextBlock Text="Deadline date:" Foreground="{StaticResource CurrentTasksToolTipForeground_1}" TextWrapping="Wrap" TextAlignment="Left" FontSize="14" Margin="5,10,5,0"/>

                            <TextBlock Text="{Binding Path=DateTimeCompletion, StringFormat={}{0:dd.MM.yyyy  HH:mm}}" Foreground="{StaticResource CurrentTasksToolTipForeground_2}" TextWrapping="Wrap" TextAlignment="Left" FontSize="14" Margin="5"/>
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="Item.MouseOver.Background" Color="#689acc"/>
    <SolidColorBrush x:Key="Item.MouseOver.Border" Color="#588bbf"/>
    <SolidColorBrush x:Key="Item.SelectedActive.Background" Color="#4695e3"/>
    <SolidColorBrush x:Key="Item.SelectedActive.Border" Color="#62a9f0"/>
    <Style TargetType="{x:Type ListBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Padding" Value="4,1"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Background" Value="#2d5680"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Margin" Value="10,5,10,5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="10" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                        <Grid>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

                            <Border Grid.RowSpan="1" HorizontalAlignment="Right" VerticalAlignment="Top" Width="60" Height="25" Background="#b0bccf" BorderThickness="1" CornerRadius="10" Margin="5,10,5,5">
                                <TextBlock Text="More" Foreground="#2d5680" FontSize="14"/>

                                <Border.Style>
                                    <Style TargetType="Border">
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="ToolTip">
                                                    <Setter.Value>
                                                        <ToolTip Placement="Bottom" Style="{StaticResource currentTasksToolTip}"/>
                                                    </Setter.Value>
                                                </Setter>

                                                <Setter Property="BorderBrush" Value="#1e3a57"/>
                                            </Trigger>
                                            <Trigger Property="IsMouseOver" Value="False">
                                                <Setter Property="BorderBrush" Value="#b0bccf"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                            </Border>

                            <Border Grid.RowSpan="1" Style="{Binding Path=Priority, Converter={StaticResource getBorderStyleConverter}}" HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="16" Height="16" BorderThickness="1" CornerRadius="10" Margin="5,5,5,10"/>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.MouseOver.Border}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                <Condition Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Background}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Border}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                <Condition Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Background}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Border}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
            
        </Setter>
    </Style>

    <SolidColorBrush x:Key="CompletedTasksToolTipBackground" Color="#115733"/>
    <SolidColorBrush x:Key="CompletedTasksToolTipBorderBrush" Color="DarkGray"/>
    <SolidColorBrush x:Key="CompletedTasksToolTipForeground_1" Color="#b0cfb5"/>
    <SolidColorBrush x:Key="CompletedTasksToolTipForeground_2" Color="LightGray"/>
    <Style x:Key="completedTasksToolTip" TargetType="ToolTip">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToolTip">
                    <Border Background="{StaticResource CompletedTasksToolTipBackground}" BorderBrush="{StaticResource CompletedTasksToolTipBorderBrush}" BorderThickness="1" CornerRadius="10">
                        <StackPanel Margin="5" Width="400" Orientation="Vertical">
                            <TextBlock  Text="Main task:" Foreground="{StaticResource CompletedTasksToolTipForeground_1}" TextWrapping="Wrap" TextAlignment="Left" FontSize="14" Margin="5,10,5,0"/>

                            <TextBlock  Text="{Binding Path=MainTaskTitle}" Foreground="{StaticResource CompletedTasksToolTipForeground_2}" TextWrapping="Wrap" TextAlignment="Left" FontSize="14" Margin="5"/>

                            <TextBlock  Text="Subtask:" Foreground="{StaticResource CompletedTasksToolTipForeground_1}" TextWrapping="Wrap" TextAlignment="Left" FontSize="14" Margin="5,10,5,0"/>

                            <TextBlock  Text="{Binding Path=SubTaskTitle}" Foreground="{StaticResource CompletedTasksToolTipForeground_2}" TextWrapping="Wrap" TextAlignment="Left" FontSize="14" Margin="5"/>

                            <TextBlock  Text="Priority:" Foreground="{StaticResource CompletedTasksToolTipForeground_1}" TextWrapping="Wrap" TextAlignment="Left" FontSize="14" Margin="5,10,5,0"/>

                            <TextBlock  Text="{Binding Path=Priority}" Foreground="{StaticResource CompletedTasksToolTipForeground_2}" TextWrapping="Wrap" TextAlignment="Left" FontSize="14" Margin="5"/>

                            <TextBlock  Text="Percentage of users who completed the task:" Foreground="{StaticResource CompletedTasksToolTipForeground_1}" TextWrapping="Wrap" TextAlignment="Left" FontSize="14" Margin="5,10,5,5"/>

                            <ProgressBar  Name="progressBar" Value="{Binding Path=DeadlineValue}" Margin="5,0,5,0"/>

                            <TextBlock Text="Creation date:" Foreground="{StaticResource CompletedTasksToolTipForeground_1}" TextWrapping="Wrap" TextAlignment="Left" FontSize="14" Margin="5,15,5,0"/>

                            <TextBlock Text="{Binding Path=DateTimeCreation, StringFormat={}{0:dd.MM.yyyy  HH:mm}}" Foreground="{StaticResource CompletedTasksToolTipForeground_2}" TextWrapping="Wrap" TextAlignment="Left" FontSize="14" Margin="5"/>

                            <TextBlock Text="Deadline date:" Foreground="{StaticResource CompletedTasksToolTipForeground_1}" TextWrapping="Wrap" TextAlignment="Left" FontSize="14" Margin="5,10,5,0"/>

                            <TextBlock Text="{Binding Path=DateTimeCompletion, StringFormat={}{0:dd.MM.yyyy  HH:mm}}" Foreground="{StaticResource CompletedTasksToolTipForeground_2}" TextWrapping="Wrap" TextAlignment="Left" FontSize="14" Margin="5"/>

                            <TextBlock Text="Completion date:" Foreground="{StaticResource CompletedTasksToolTipForeground_1}" TextWrapping="Wrap" TextAlignment="Left" FontSize="14" Margin="5,10,5,0"/>

                            <TextBlock Text="{Binding Path=DateTimeCompleted, StringFormat={}{0:dd.MM.yyyy  HH:mm}}" Foreground="{StaticResource CompletedTasksToolTipForeground_2}" TextWrapping="Wrap" TextAlignment="Left" FontSize="14" Margin="5"/>
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CompletedListBoxItemStyle" TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource {x:Type ListBoxItem}}">
        <Setter Property="Background" Value="#19804b"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="10" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                        <Grid>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

                            <Border Grid.RowSpan="1" HorizontalAlignment="Right" VerticalAlignment="Top" Width="60" Height="25" Background="#b0cfb5" BorderThickness="1" CornerRadius="10" Margin="5,10,5,5">
                                <TextBlock Text="More" Foreground="#19804b" FontSize="14"/>

                                <Border.Style>
                                    <Style TargetType="Border">
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="ToolTip">
                                                    <Setter.Value>
                                                        <ToolTip Placement="Bottom" Style="{StaticResource completedTasksToolTip}"/>
                                                    </Setter.Value>
                                                </Setter>

                                                <Setter Property="BorderBrush" Value="#19804b"/>
                                            </Trigger>
                                            <Trigger Property="IsMouseOver" Value="False">
                                                <Setter Property="BorderBrush" Value="#b0cfb5"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="#3ea872"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="#51c289"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                <Condition Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="#1fc471"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="#30db85"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                <Condition Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="#1fc471"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="#30db85"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="ExpiredTasksToolTipBackground" Color="#4d1818"/>
    <SolidColorBrush x:Key="ExpiredTasksToolTipBorderBrush" Color="DarkGray"/>
    <SolidColorBrush x:Key="ExpiredTasksToolTipForeground_1" Color="#de8f76"/>
    <SolidColorBrush x:Key="ExpiredTasksToolTipForeground_2" Color="#ff9359"/>
    <Style x:Key="expiredTasksToolTip" TargetType="ToolTip">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToolTip">
                    <Border Background="{StaticResource ExpiredTasksToolTipBackground}" BorderBrush="{StaticResource ExpiredTasksToolTipBorderBrush}" BorderThickness="1" CornerRadius="10">
                        <StackPanel Margin="5" Width="400" Orientation="Vertical">
                            <TextBlock  Text="Main task:" Foreground="{StaticResource ExpiredTasksToolTipForeground_1}" TextWrapping="Wrap" TextAlignment="Left" FontSize="14" Margin="5,10,5,0"/>

                            <TextBlock  Text="{Binding Path=MainTaskTitle}" Foreground="{StaticResource ExpiredTasksToolTipForeground_2}" TextWrapping="Wrap" TextAlignment="Left" FontSize="14" Margin="5"/>

                            <TextBlock  Text="Subtask:" Foreground="{StaticResource ExpiredTasksToolTipForeground_1}" TextWrapping="Wrap" TextAlignment="Left" FontSize="14" Margin="5,10,5,0"/>

                            <TextBlock  Text="{Binding Path=SubTaskTitle}" Foreground="{StaticResource ExpiredTasksToolTipForeground_2}" TextWrapping="Wrap" TextAlignment="Left" FontSize="14" Margin="5"/>

                            <TextBlock  Text="Priority:" Foreground="{StaticResource ExpiredTasksToolTipForeground_1}" TextWrapping="Wrap" TextAlignment="Left" FontSize="14" Margin="5,10,5,0"/>

                            <TextBlock  Text="{Binding Path=Priority}" Foreground="{StaticResource ExpiredTasksToolTipForeground_2}" TextWrapping="Wrap" TextAlignment="Left" FontSize="14" Margin="5"/>

                            <TextBlock  Text="Percentage of users who completed the task:" Foreground="{StaticResource ExpiredTasksToolTipForeground_1}" TextWrapping="Wrap" TextAlignment="Left" FontSize="14" Margin="5,10,5,5"/>

                            <ProgressBar  Name="progressBar" Value="{Binding Path=DeadlineValue}" Margin="5,0,5,0"/>

                            <TextBlock Text="Creation date:" Foreground="{StaticResource ExpiredTasksToolTipForeground_1}" TextWrapping="Wrap" TextAlignment="Left" FontSize="14" Margin="5,15,5,0"/>

                            <TextBlock Text="{Binding Path=DateTimeCreation, StringFormat={}{0:dd.MM.yyyy  HH:mm}}" Foreground="{StaticResource ExpiredTasksToolTipForeground_2}" TextWrapping="Wrap" TextAlignment="Left" FontSize="14" Margin="5"/>

                            <TextBlock Text="Deadline date:" Foreground="{StaticResource ExpiredTasksToolTipForeground_1}" TextWrapping="Wrap" TextAlignment="Left" FontSize="14" Margin="5,10,5,0"/>

                            <TextBlock Text="{Binding Path=DateTimeCompletion, StringFormat={}{0:dd.MM.yyyy  HH:mm}}" Foreground="{StaticResource ExpiredTasksToolTipForeground_2}" TextWrapping="Wrap" TextAlignment="Left" FontSize="14" Margin="5"/>
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpiredListBoxItemStyle" TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource {x:Type ListBoxItem}}">
        <Setter Property="Background" Value="#732525"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="10" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                        <Grid>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

                            <Border Grid.RowSpan="1" HorizontalAlignment="Right" VerticalAlignment="Top" Width="60" Height="25" Background="#de8f76" BorderThickness="1" CornerRadius="10" Margin="5,10,5,5">
                                <TextBlock Text="More" Foreground="#732525" FontSize="14"/>

                                <Border.Style>
                                    <Style TargetType="Border">
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="ToolTip">
                                                    <Setter.Value>
                                                        <ToolTip Placement="Bottom" Style="{StaticResource expiredTasksToolTip}"/>
                                                    </Setter.Value>
                                                </Setter>

                                                <Setter Property="BorderBrush" Value="#732525"/>
                                            </Trigger>
                                            <Trigger Property="IsMouseOver" Value="False">
                                                <Setter Property="BorderBrush" Value="#de8f76"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="#d45f5f"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="#e87272"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                <Condition Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="#cc3131"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="#e34040"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                <Condition Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="#cc3131"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="#e34040"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type PasswordBox}">
        <Setter Property="PasswordChar" Value="●"/>
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="10" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                    <Condition Property="IsSelectionActive" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Grid" x:Key="GridGradientStyle">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FF2C3E50" Offset="1"/>
                    <GradientStop Color="#FFBDC3C7" Offset="0"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>